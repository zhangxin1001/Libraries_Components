<style lang = 'less'>
.scrollWrap {
  display: inline-block;
  height: 50rpx;
  line-height: 50rpx;
  display: flex;
  text-align: center;
  justify-content: space-between;
  width: 66%;
}
.scrolldata {
  height: 100%;
  font-size: 38rpx;
  overflow: hidden;
  position: relative;
  color: #fff;
  position: relative;
}
.scrollnum {
  width: 30rpx;
  display: inline-block;
  position: relative;
  top: 0rpx;
  background: red;
}
.movenum {
  height: 10%;
  overflow: hidden;
  display: block;
}
.commachar {
  width: 30rpx;
  display: inline-block;
  position: relative;
  right: 2rpx;
  vertical-align: top;
  color: #000;
}
</style>
<template>
  <view class="scrollWrap">
    <view
      class="scrolldata"
      wx:for="{{numConfig.len}}"
      wx:key='item'
    >
      <view
        class="scrollnum"
        animation="{{animation[index]}}"
      >
        <text
          class="movenum"
          wx:for='{{10}}'
          wx:key="item"
        >{{item}}</text>
      </view>
      <view
        class="commachar"
        wx:if="{{((numConfig.len-(index+1))%3===0) && index < numConfig.len-1}}"
      >,
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
export default class extends wepy.component {
  props = {
    numConfig: {
      type: Object
    }
  }
  data = {
    animation: [],
    diff: []
  }
  onLoad() {
    this.scollNum(this.numConfig.num, this.beforeStr(this.numConfig.len + 1))
  }
  watch = {
    numConfig(newNum, oldNum) {
      if (~~newNum.num > oldNum.num || newNum.isReverse) {
        var diffLen = this.numConfig.len - String(oldNum.num).length + 1
        var str = this.beforeStr(diffLen)
        var lastNum = str + oldNum.num
        this.scollNum(newNum.num, lastNum)
      }
    }
  }
  scollNum(num, oldnum) {
    this.initData(num)
    this.reduce(this.numConfig.num, oldnum)
    var arr = this.numConfig.num.split('')
    var height = ''
    let self = this
    var query = wepy.createSelectorQuery()
    query
      .select('.movenum')
      .boundingClientRect(function(res) {
        height = res.height
        var animate = []
        for (var i = 0; i < self.numConfig.len; i++) {
          animate[i] = wx.createAnimation()
          animate[i].top(-parseInt(height) * arr[i]).step({
            duration: self.diff[i] * self.numConfig.time
          })
          self.animation[i] = animate[i].export()
          self.$apply()
        }
      })
      .exec()
  }
  initData(num) {
    // 配置的长度
    var targetLen = this.numConfig.len
    // 实际长度
    var actualLen = String(num).length
    this.numConfig.len = targetLen < actualLen ? actualLen : targetLen
    var diffLen = this.numConfig.len - actualLen + 1
    var str = this.beforeStr(diffLen)
    this.numConfig.num = str + this.numConfig.num
    this.$apply()
  }
  beforeStr(diffLen) {
    var str = ''
    while (--diffLen && diffLen > 0) {
      str += '0'
    }
    return str
  }
  reduce(newNum, oldNum) {
    if (oldNum) {
      var len = newNum.length
      for (var i = 0; i < len; i++) {
        this.diff[i] = Math.abs(newNum.charAt(i) - oldNum.charAt(i))
        this.$apply()
      }
    }
  }
}
</script>
